---
import Icon from '../utility/icon';
import Markdown from '../utility/markdown.astro';
interface Props {
  background_color: string;
  links_color: string;
  heading: {
    heading_text: string;
    heading_color: string;
  };
  subheading: {
    subheading_text: string;
    subheading_color: string;
  };
  contact_details: [
    {
      icon: string;
      label: string;
      text: string;
      color: string;
    },
  ];
  form: [
    {
      label: string;
      color: string;
      type: string;
      name: string;
      radio_options: [{ value: string; label: string }];
    },
  ];
}
const block = Astro.props;
const links_color_var = block.links_color;
---

<section id="contact" style={`background-color: ${block.background_color}`}>
  <div
    class="contact-form flex flex-col md:flex-row gap-8 px-8 py-[96px] items-center md:justify-between md:items-start">
    <div class="w-full md:w-1/2 max-w-[32rem]">
      <h2 style={`color: ${block.heading.heading_color};`}>
        {block.heading.heading_text}
      </h2>
      <p
        class="max-w-[24rem]"
        style={`color: ${block.subheading.subheading_color};`}>
        {block.subheading.subheading_text}
      </p>
      <div class="flex flex-col gap-4 mt-8">
        {
          block.contact_details.map((item) => {
            return (
              <div class="flex flex-col gap-1" style={`color: ${item.color}`}>
                <p class="flex gap-2 items-center font-bold space-between">
                  {item.icon && (
                    <span class="w-4">
                      <Icon icon={item.icon} />
                    </span>
                  )}
                  {item.label}
                </p>
                <div>
                  <Markdown content={item.text} />
                </div>
              </div>
            );
          })
        }
      </div>
    </div>
    <div class="w-full md:w-1/2 rounded-lg max-w-[32rem]">
      <form method="post" action="/success.html" class="flex flex-col gap-8">
        {
          block.form.map((item) => {
            return item.type === 'text' ? (
              <div class="text-input-group">
                <label for={item.name} style={`color: ${item.color}`}>
                  {item.label}
                </label>
                <input type={item.type} id={item.name} name={item.name} />
              </div>
            ) : item.type === 'textarea' ? (
              <div class="text-input-group">
                <label for={item.name} style={`color: ${item.color}`}>
                  {item.label}
                </label>
                <textarea id={item.name} name={item.name} />
              </div>
            ) : item.type === 'radio' ? (
              <div class="check-input-group gap-2">
                <label style={`color: ${item.color}`}>{item.label}</label>
                <div class="flex flex-col gap-2">
                  {item.radio_options?.map(
                    (option: { value?: string; label?: string }) => {
                      return (
                        <div class="flex gap-3">
                          <input
                            type="radio"
                            id={option.label}
                            name={item.name}
                            value={option.value}
                          />
                          <label
                            style={`color: ${item.color}`}
                            for={option.label}>
                            {option.label}
                          </label>
                        </div>
                      );
                    }
                  )}
                </div>
              </div>
            ) : null;
          })
        }
        <!-- <input type="hidden" name="inbox_key" value="contact_inbox" />
      <input
        type="hidden"
        name="_to"
        value="sales@example.com,support@example.com"
      />
      <input type="hidden" name="_cc" value="sales.tracker@example.com" />
      <input type="text" name="_gotcha" style="display: none;" /> -->

        <input class="form-button" type="submit" value="Send Message" />
      </form>
    </div>
  </div>
</section>

<style is:global define:vars={{ links_color_var }}>
  .contact-form .markdown-text a {
    color: var(--links_color_var);
  }
</style>

<style>
  .contact-form {
    max-width: var(--pageContainer);
    margin: 0 auto;
    align-self: flex-end;
  }

  input,
  textarea {
    border: 1px solid #f1f1f1;
    border-radius: 8px;
    padding: 0.5rem 1rem;
    color: black;
  }
  .text-input-group,
  .check-input-group {
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  .form-button {
    padding: 0.5rem 1rem;
    cursor: pointer;
    color: white;
  }
  .form-button:hover {
    background-color: white;
    color: black;
    box-shadow: 0 2px 0 1px rgb(193, 193, 193);
    transform: translateY(-2px);
  }
  .form-button:active {
    box-shadow: 0 0px 0 1px white;
  }
</style>
