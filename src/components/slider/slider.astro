---
import Markdown from '../utility/markdown.astro';
const block = Astro.props;
---

{
  ENV_BOOKSHOP_LIVE ? (
    <h2 style="text-align: center;">
      This component breaks the visual previewer - this is a fallback message.
      The component is still editable, and builds on the real site.
    </h2>
  ) : (
    <>
      {block.flipped ? (
        <div class="slider-container">
          <div class="slider-text">
            {block.heading ? (
              <h2 class="slider-heading">{block.heading}</h2>
            ) : null}
            {block.subheading ? (
              <div class="md:max-w-[24rem]">{block.subheading}</div>
            ) : null}
          </div>
          <swiper-container class="swiper-container">
            {block.slides.map((slide: any) => {
              return (
                <swiper-slide class="slide-container">
                  <div class="swiper-slide-contents">
                    <Markdown content={slide.text} />
                  </div>
                </swiper-slide>
              );
            })}

            <div class="swiper-pagination" />

            <div class="swiper-button-prev" />
            <div class="swiper-button-next" />

            <div class="swiper-scrollbar" />
          </swiper-container>
        </div>
      ) : (
        <div class="slider-container">
          <swiper-container class="swiper-container">
            {block.slides.map((slide: any) => {
              return (
                <swiper-slide class="slide-container">
                  <div class="swiper-slide-contents">
                    <Markdown content={slide.text} />
                  </div>
                </swiper-slide>
              );
            })}

            <div class="swiper-pagination" />

            <div class="swiper-button-prev" />
            <div class="swiper-button-next" />

            <div class="swiper-scrollbar" />
          </swiper-container>
          <div class="slider-text">
            {block.heading ? (
              <h2 class="slider-heading">{block.heading}</h2>
            ) : null}
            {block.subheading ? (
              <div class="md:max-w-[24rem]">{block.subheading}</div>
            ) : null}
          </div>
        </div>
      )}
    </>
  )
}

<script>
  // swiper element
  const swiperEl = document.querySelector('swiper-container');

  // swiper parameters
  const swiperParams = {
    slidesPerView: 1,
    loop: true,
    pagination: true,
    navigation: true,
    spaceBetween: 30,
  };

  // now we need to assign all parameters to Swiper element
  Object.assign(swiperEl, swiperParams);

  // and now initialize it
  swiperEl.initialize();
</script>

<style is:global>
  .slider-container {
    max-width: var(--largeContainer);
    margin: 0 auto;
    padding-block: 96px;
    padding-inline: var(--pagePadding);
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
  .swiper-container {
    width: 100%;
  }

  .slider-text {
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  .slider-heading {
    font-size: 2.5rem;
  }

  .swiper-slide-contents {
    padding-inline: 5rem;
    width: 100%;
    display: flex;
    flex-direction: column;
  }
  .swiper-slide-active .swiper-slide-contents {
    border-radius: 8px;
    background-color: white;
    border-radius: 8px;
  }

  @media only screen and (min-width: 700px) {
    .slider-container {
      flex-direction: row;
      justify-content: space-between;
    }
    .swiper-container {
      width: 50%;
    }
    .swiper-slide-contents {
      align-items: center;
    }
  }
  @media only screen and (min-width: 850px) {
    .slider-heading {
      font-size: 3rem;
    }
  }
  @media only screen and (min-width: 1024px) {
    .slider-heading {
      font-size: 4rem;
    }
  }
</style>
